------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
The total code holds some 754 functions.

For the display system there are already 36 functions found for just the initilization of the graphics part. Function pointers are used to call other functions, so these need to 
be found also.

There are some empty functions that just return and there are functions that just return a zero.

The display_text function uses 39 functions. None of these call one of the functions using the screen buffers, but it does use function pointers, so might be that these are
used to do the actual displaying on the screen.

Then there are 67 functions that use the global pointer 0x8019CF60 and the screen buffers. Not found where they are called from, par example for the display_text function.

The memory setup needs to be figured out. Already found some, but they need comprehensible names to make sence.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Address used as global pointer
0x8019CF60 ==> 0x803849A0 == video memory. Write here to display stuff. Two bytes per pixel, 800 pixels per row. 5 bits red, 6 bits green, 5 bits blue.
0x8019CF64 ==> 0x805B71B8 == display info structure. Holds settings for the display.


This address (0x8019CF60) is used to set a target screen pointer. In FUN_80017760 the screen frame buffer 0x804FB9B4 is set in to it.

There is another global pointer used to point to display data. Initialy it is set with the below address. There is some sort of context system that can update the pointer,
but the counter part function does not restore it. Only decrements a counter.
0x8019D470 ==> 0x80857D4C

The drawing system uses function pointers and makes it hard to find what is being done.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Memory used for the display system

0x8019D46C               A function pointer set to 0x80189750 which points to 0x80017e20 (FUN_80017e20)

0x8019D47C               is display system initialized flag
0x8019D480               A function pointer set to point to FUN_8002fdd4

0x8019D4E8               A function pointer set to point to FUN_8002fe14

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
The actual screen memory set in DEBE (Used either directly or via the global pointer)

0x803849A0

This is used in 7 functions:
FUN_80017778             void set_screen_to_global_pointer(void);
FUN_8001c6f0
FUN_8001cccc
FUN_8001cd34             void copy_frame_to_screen(void);    (0x804FB9B4 ==> 0x803849A0)
FUN_8001d230
FUN_8001d5d4             void sys_init_display(void);        (used twice. A. Load 0x8019CF60 with 0x803849A0.  B. input for init_debe)
FUN_80022bc8                                                 (used twice. A. copy 0x803849A0 to 0x805B7228.    B. input for FUN_8001d4ec)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
A screen buffer (frame_buffer_2)

0x804401B4 

This is used in 7 functions:
FUN_8001c6f0                                                 (actual screen memory is used here to)
FUN_8001d230                                                 (actual screen memory is used here to)
FUN_80029eb0                                                 (actual screen memory is most likely used here too. Via 0x8019CF60)
FUN_80029f00                                                 (actual screen memory is most likely used here too. Via 0x8019CF60)
FUN_8002b9bc                                                 (actual screen memory is most likely used here too. Via 0x8019CF60)
FUN_8002be60                                                 (used 4 times)
FUN_8002c5b8                                                 (actual screen memory is most likely used here too. Via 0x8019CF60)

The other screen buffer used in 4 of these functions depens on which screen buffer is set in the global screen pointer.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
A screen buffer (frame_buffer) (Used either directly or via the global pointer)

0x804FB9B4

This is used in 5 functions:
FUN_800114d0
FUN_8001178c
FUN_80017760             void set_frame_to_global_pointer(void);        (Set as target in global screen pointer)
FUN_8001cccc                                                            (actual screen memory is used here to)
FUN_8001cd34             void copy_frame_to_screen(void);               (0x804FB9B4 ==> 0x803849A0)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
A screen buffer

0x805B7228

This is used in 2 functions

FUN_80022DD4                                                 (it is cleared based on an input setting)
FUN_80022BC8                                                 (used twice. A. used as input to function FUN_8001D4EC. B. get the screen memory copied in it.)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pointer to the screen or a frame buffer

0x8019CF60

This is used in 61 functions:

These first set of functions could be a drawing library. They sit in memory almost consecutively.
FUN_80002810               (Called 1x: FUN_80025f2c)
FUN_80009af4               (Called 4x: FUN_80025468, FUN_8002b124 (2x), FUN_8002b68c)
FUN_8000bf24               (Called 3x: FUN_8000bdf0, FUN_8001b674 (2x))
FUN_8000c0d4               (Called 5x: FUN_8000bdf0, FUN_8001b674 (4x))
FUN_8000c2c4               (Called 5x: FUN_8000bdf0, FUN_8001b674 (4x))
FUN_8000c4b8
FUN_8000c690
FUN_8000c850
FUN_8000ca00
FUN_8000cbc0
FUN_8000cd6c
FUN_8000cf2c
FUN_8000d0ec
FUN_8000d2a8
FUN_8000d478
FUN_8000d630
FUN_8000d7ec
FUN_8000d9bc
FUN_8000ddb8
FUN_8000e1e4
FUN_8000e6f8
FUN_8000e7f8
FUN_8000ea18
FUN_800104b4
FUN_800105e0
FUN_800106a4
FUN_800107f4
FUN_80010944
FUN_80010a30
FUN_80010bd0
FUN_80010f08
FUN_80011154
FUN_80011254
FUN_800114d0
FUN_80011640
FUN_800118f4
FUN_8001267c
FUN_80012920

From here on I suspect it being functions implemented on top of a drawing library
FUN_80012a64
FUN_80014384
FUN_800148e4
FUN_80014e7c
FUN_80015f0c
FUN_800163cc                      void init_debe (ushort xsize, ushort ysize, uint address);
FUN_80017760                      void set_frame_to_global_pointer(void);
FUN_80017778                      void set_screen_to_global_pointer(void);
FUN_8001cddc
FUN_8001d5d4                      void sys_init_display(void)
FUN_80021810
FUN_80021c3c
FUN_80021d14
FUN_80021e1c
FUN_80022bc8
FUN_80022dd4
FUN_80028828
FUN_80029eb0
FUN_80029f00
FUN_8002b8e8
FUN_8002b9bc
FUN_8002be60
FUN_8002c5b8
FUN_80031238


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Support functions

FUN_80019704                          void set_display_color(uint color)
FUN_80018f6c                          void display_clear_rect(ushort xpos,ushort ypos,ushort xsize,ushort ysize)
FUN_80018bf8                          void display_text(char *text,ushort xpos,ushort ypos)


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
called from display text

FUN_8001936c
FUN_80018a74





















